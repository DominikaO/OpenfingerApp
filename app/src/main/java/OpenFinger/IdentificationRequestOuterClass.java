// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IdentificationRequest.proto

package OpenFinger;

public final class IdentificationRequestOuterClass {
  private IdentificationRequestOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Level2VectorOfFingerprintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OpenFinger.Level2VectorOfFingerprint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 fingerprint_id = 1;</code>
     * @return The fingerprintId.
     */
    int getFingerprintId();

    /**
     * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
     * @return Whether the level2vector field is set.
     */
    boolean hasLevel2Vector();
    /**
     * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
     * @return The level2vector.
     */
    OpenFinger.Level2VectorOuterClass.Level2Vector getLevel2Vector();
    /**
     * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
     */
    OpenFinger.Level2VectorOuterClass.Level2VectorOrBuilder getLevel2VectorOrBuilder();
  }
  /**
   * Protobuf type {@code OpenFinger.Level2VectorOfFingerprint}
   */
  public static final class Level2VectorOfFingerprint extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OpenFinger.Level2VectorOfFingerprint)
      Level2VectorOfFingerprintOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Level2VectorOfFingerprint.newBuilder() to construct.
    private Level2VectorOfFingerprint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Level2VectorOfFingerprint() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Level2VectorOfFingerprint();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Level2VectorOfFingerprint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              fingerprintId_ = input.readInt32();
              break;
            }
            case 18: {
              OpenFinger.Level2VectorOuterClass.Level2Vector.Builder subBuilder = null;
              if (level2Vector_ != null) {
                subBuilder = level2Vector_.toBuilder();
              }
              level2Vector_ = input.readMessage(OpenFinger.Level2VectorOuterClass.Level2Vector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(level2Vector_);
                level2Vector_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_Level2VectorOfFingerprint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_Level2VectorOfFingerprint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.class, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder.class);
    }

    public static final int FINGERPRINT_ID_FIELD_NUMBER = 1;
    private int fingerprintId_;
    /**
     * <code>int32 fingerprint_id = 1;</code>
     * @return The fingerprintId.
     */
    @java.lang.Override
    public int getFingerprintId() {
      return fingerprintId_;
    }

    public static final int LEVEL2VECTOR_FIELD_NUMBER = 2;
    private OpenFinger.Level2VectorOuterClass.Level2Vector level2Vector_;
    /**
     * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
     * @return Whether the level2vector field is set.
     */
    @java.lang.Override
    public boolean hasLevel2Vector() {
      return level2Vector_ != null;
    }
    /**
     * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
     * @return The level2vector.
     */
    @java.lang.Override
    public OpenFinger.Level2VectorOuterClass.Level2Vector getLevel2Vector() {
      return level2Vector_ == null ? OpenFinger.Level2VectorOuterClass.Level2Vector.getDefaultInstance() : level2Vector_;
    }
    /**
     * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
     */
    @java.lang.Override
    public OpenFinger.Level2VectorOuterClass.Level2VectorOrBuilder getLevel2VectorOrBuilder() {
      return getLevel2Vector();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fingerprintId_ != 0) {
        output.writeInt32(1, fingerprintId_);
      }
      if (level2Vector_ != null) {
        output.writeMessage(2, getLevel2Vector());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fingerprintId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fingerprintId_);
      }
      if (level2Vector_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getLevel2Vector());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint)) {
        return super.equals(obj);
      }
      OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint other = (OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint) obj;

      if (getFingerprintId()
          != other.getFingerprintId()) return false;
      if (hasLevel2Vector() != other.hasLevel2Vector()) return false;
      if (hasLevel2Vector()) {
        if (!getLevel2Vector()
            .equals(other.getLevel2Vector())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FINGERPRINT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFingerprintId();
      if (hasLevel2Vector()) {
        hash = (37 * hash) + LEVEL2VECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getLevel2Vector().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OpenFinger.Level2VectorOfFingerprint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OpenFinger.Level2VectorOfFingerprint)
        OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_Level2VectorOfFingerprint_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_Level2VectorOfFingerprint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.class, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder.class);
      }

      // Construct using OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fingerprintId_ = 0;

        if (level2VectorBuilder_ == null) {
          level2Vector_ = null;
        } else {
          level2Vector_ = null;
          level2VectorBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_Level2VectorOfFingerprint_descriptor;
      }

      @java.lang.Override
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint getDefaultInstanceForType() {
        return OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.getDefaultInstance();
      }

      @java.lang.Override
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint build() {
        OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint buildPartial() {
        OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint result = new OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint(this);
        result.fingerprintId_ = fingerprintId_;
        if (level2VectorBuilder_ == null) {
          result.level2Vector_ = level2Vector_;
        } else {
          result.level2Vector_ = level2VectorBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint) {
          return mergeFrom((OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint other) {
        if (other == OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.getDefaultInstance()) return this;
        if (other.getFingerprintId() != 0) {
          setFingerprintId(other.getFingerprintId());
        }
        if (other.hasLevel2Vector()) {
          mergeLevel2Vector(other.getLevel2Vector());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int fingerprintId_ ;
      /**
       * <code>int32 fingerprint_id = 1;</code>
       * @return The fingerprintId.
       */
      @java.lang.Override
      public int getFingerprintId() {
        return fingerprintId_;
      }
      /**
       * <code>int32 fingerprint_id = 1;</code>
       * @param value The fingerprintId to set.
       * @return This builder for chaining.
       */
      public Builder setFingerprintId(int value) {
        
        fingerprintId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 fingerprint_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFingerprintId() {
        
        fingerprintId_ = 0;
        onChanged();
        return this;
      }

      private OpenFinger.Level2VectorOuterClass.Level2Vector level2Vector_;
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenFinger.Level2VectorOuterClass.Level2Vector, OpenFinger.Level2VectorOuterClass.Level2Vector.Builder, OpenFinger.Level2VectorOuterClass.Level2VectorOrBuilder> level2VectorBuilder_;
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       * @return Whether the level2vector field is set.
       */
      public boolean hasLevel2Vector() {
        return level2VectorBuilder_ != null || level2Vector_ != null;
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       * @return The level2vector.
       */
      public OpenFinger.Level2VectorOuterClass.Level2Vector getLevel2Vector() {
        if (level2VectorBuilder_ == null) {
          return level2Vector_ == null ? OpenFinger.Level2VectorOuterClass.Level2Vector.getDefaultInstance() : level2Vector_;
        } else {
          return level2VectorBuilder_.getMessage();
        }
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      public Builder setLevel2Vector(OpenFinger.Level2VectorOuterClass.Level2Vector value) {
        if (level2VectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          level2Vector_ = value;
          onChanged();
        } else {
          level2VectorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      public Builder setLevel2Vector(
          OpenFinger.Level2VectorOuterClass.Level2Vector.Builder builderForValue) {
        if (level2VectorBuilder_ == null) {
          level2Vector_ = builderForValue.build();
          onChanged();
        } else {
          level2VectorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      public Builder mergeLevel2Vector(OpenFinger.Level2VectorOuterClass.Level2Vector value) {
        if (level2VectorBuilder_ == null) {
          if (level2Vector_ != null) {
            level2Vector_ =
              OpenFinger.Level2VectorOuterClass.Level2Vector.newBuilder(level2Vector_).mergeFrom(value).buildPartial();
          } else {
            level2Vector_ = value;
          }
          onChanged();
        } else {
          level2VectorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      public Builder clearLevel2Vector() {
        if (level2VectorBuilder_ == null) {
          level2Vector_ = null;
          onChanged();
        } else {
          level2Vector_ = null;
          level2VectorBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      public OpenFinger.Level2VectorOuterClass.Level2Vector.Builder getLevel2VectorBuilder() {
        
        onChanged();
        return getLevel2VectorFieldBuilder().getBuilder();
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      public OpenFinger.Level2VectorOuterClass.Level2VectorOrBuilder getLevel2VectorOrBuilder() {
        if (level2VectorBuilder_ != null) {
          return level2VectorBuilder_.getMessageOrBuilder();
        } else {
          return level2Vector_ == null ?
              OpenFinger.Level2VectorOuterClass.Level2Vector.getDefaultInstance() : level2Vector_;
        }
      }
      /**
       * <code>.OpenFinger.Level2Vector level2vector = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenFinger.Level2VectorOuterClass.Level2Vector, OpenFinger.Level2VectorOuterClass.Level2Vector.Builder, OpenFinger.Level2VectorOuterClass.Level2VectorOrBuilder> 
          getLevel2VectorFieldBuilder() {
        if (level2VectorBuilder_ == null) {
          level2VectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              OpenFinger.Level2VectorOuterClass.Level2Vector, OpenFinger.Level2VectorOuterClass.Level2Vector.Builder, OpenFinger.Level2VectorOuterClass.Level2VectorOrBuilder>(
                  getLevel2Vector(),
                  getParentForChildren(),
                  isClean());
          level2Vector_ = null;
        }
        return level2VectorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:OpenFinger.Level2VectorOfFingerprint)
    }

    // @@protoc_insertion_point(class_scope:OpenFinger.Level2VectorOfFingerprint)
    private static final OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint();
    }

    public static OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Level2VectorOfFingerprint>
        PARSER = new com.google.protobuf.AbstractParser<Level2VectorOfFingerprint>() {
      @java.lang.Override
      public Level2VectorOfFingerprint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Level2VectorOfFingerprint(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Level2VectorOfFingerprint> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Level2VectorOfFingerprint> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IdentificationRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OpenFinger.IdentificationRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * fingerprint image of unknown user
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
     * @return Whether the fingerprint field is set.
     */
    boolean hasFingerprint();
    /**
     * <pre>
     * fingerprint image of unknown user
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
     * @return The fingerprint.
     */
    OpenFinger.FingerprintOuterClass.Fingerprint getFingerprint();
    /**
     * <pre>
     * fingerprint image of unknown user
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
     */
    OpenFinger.FingerprintOuterClass.FingerprintOrBuilder getFingerprintOrBuilder();

    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    java.util.List<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint> 
        getVectorsList();
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint getVectors(int index);
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    int getVectorsCount();
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    java.util.List<? extends OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder> 
        getVectorsOrBuilderList();
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder getVectorsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code OpenFinger.IdentificationRequest}
   */
  public static final class IdentificationRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OpenFinger.IdentificationRequest)
      IdentificationRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IdentificationRequest.newBuilder() to construct.
    private IdentificationRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IdentificationRequest() {
      vectors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IdentificationRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IdentificationRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              OpenFinger.FingerprintOuterClass.Fingerprint.Builder subBuilder = null;
              if (fingerprint_ != null) {
                subBuilder = fingerprint_.toBuilder();
              }
              fingerprint_ = input.readMessage(OpenFinger.FingerprintOuterClass.Fingerprint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fingerprint_);
                fingerprint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vectors_ = new java.util.ArrayList<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint>();
                mutable_bitField0_ |= 0x00000001;
              }
              vectors_.add(
                  input.readMessage(OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vectors_ = java.util.Collections.unmodifiableList(vectors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_IdentificationRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_IdentificationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.class, OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.Builder.class);
    }

    public static final int FINGERPRINT_FIELD_NUMBER = 1;
    private OpenFinger.FingerprintOuterClass.Fingerprint fingerprint_;
    /**
     * <pre>
     * fingerprint image of unknown user
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
     * @return Whether the fingerprint field is set.
     */
    @java.lang.Override
    public boolean hasFingerprint() {
      return fingerprint_ != null;
    }
    /**
     * <pre>
     * fingerprint image of unknown user
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
     * @return The fingerprint.
     */
    @java.lang.Override
    public OpenFinger.FingerprintOuterClass.Fingerprint getFingerprint() {
      return fingerprint_ == null ? OpenFinger.FingerprintOuterClass.Fingerprint.getDefaultInstance() : fingerprint_;
    }
    /**
     * <pre>
     * fingerprint image of unknown user
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
     */
    @java.lang.Override
    public OpenFinger.FingerprintOuterClass.FingerprintOrBuilder getFingerprintOrBuilder() {
      return getFingerprint();
    }

    public static final int VECTORS_FIELD_NUMBER = 2;
    private java.util.List<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint> vectors_;
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    @java.lang.Override
    public java.util.List<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint> getVectorsList() {
      return vectors_;
    }
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder> 
        getVectorsOrBuilderList() {
      return vectors_;
    }
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    @java.lang.Override
    public int getVectorsCount() {
      return vectors_.size();
    }
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    @java.lang.Override
    public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint getVectors(int index) {
      return vectors_.get(index);
    }
    /**
     * <pre>
     * array of Level-2 vectors from user DB
     * where we search the identity
     * </pre>
     *
     * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
     */
    @java.lang.Override
    public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder getVectorsOrBuilder(
        int index) {
      return vectors_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fingerprint_ != null) {
        output.writeMessage(1, getFingerprint());
      }
      for (int i = 0; i < vectors_.size(); i++) {
        output.writeMessage(2, vectors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fingerprint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFingerprint());
      }
      for (int i = 0; i < vectors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, vectors_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OpenFinger.IdentificationRequestOuterClass.IdentificationRequest)) {
        return super.equals(obj);
      }
      OpenFinger.IdentificationRequestOuterClass.IdentificationRequest other = (OpenFinger.IdentificationRequestOuterClass.IdentificationRequest) obj;

      if (hasFingerprint() != other.hasFingerprint()) return false;
      if (hasFingerprint()) {
        if (!getFingerprint()
            .equals(other.getFingerprint())) return false;
      }
      if (!getVectorsList()
          .equals(other.getVectorsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFingerprint()) {
        hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
        hash = (53 * hash) + getFingerprint().hashCode();
      }
      if (getVectorsCount() > 0) {
        hash = (37 * hash) + VECTORS_FIELD_NUMBER;
        hash = (53 * hash) + getVectorsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OpenFinger.IdentificationRequestOuterClass.IdentificationRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OpenFinger.IdentificationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OpenFinger.IdentificationRequest)
        OpenFinger.IdentificationRequestOuterClass.IdentificationRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_IdentificationRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_IdentificationRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.class, OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.Builder.class);
      }

      // Construct using OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVectorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fingerprintBuilder_ == null) {
          fingerprint_ = null;
        } else {
          fingerprint_ = null;
          fingerprintBuilder_ = null;
        }
        if (vectorsBuilder_ == null) {
          vectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vectorsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenFinger.IdentificationRequestOuterClass.internal_static_OpenFinger_IdentificationRequest_descriptor;
      }

      @java.lang.Override
      public OpenFinger.IdentificationRequestOuterClass.IdentificationRequest getDefaultInstanceForType() {
        return OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.getDefaultInstance();
      }

      @java.lang.Override
      public OpenFinger.IdentificationRequestOuterClass.IdentificationRequest build() {
        OpenFinger.IdentificationRequestOuterClass.IdentificationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public OpenFinger.IdentificationRequestOuterClass.IdentificationRequest buildPartial() {
        OpenFinger.IdentificationRequestOuterClass.IdentificationRequest result = new OpenFinger.IdentificationRequestOuterClass.IdentificationRequest(this);
        int from_bitField0_ = bitField0_;
        if (fingerprintBuilder_ == null) {
          result.fingerprint_ = fingerprint_;
        } else {
          result.fingerprint_ = fingerprintBuilder_.build();
        }
        if (vectorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vectors_ = java.util.Collections.unmodifiableList(vectors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vectors_ = vectors_;
        } else {
          result.vectors_ = vectorsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OpenFinger.IdentificationRequestOuterClass.IdentificationRequest) {
          return mergeFrom((OpenFinger.IdentificationRequestOuterClass.IdentificationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OpenFinger.IdentificationRequestOuterClass.IdentificationRequest other) {
        if (other == OpenFinger.IdentificationRequestOuterClass.IdentificationRequest.getDefaultInstance()) return this;
        if (other.hasFingerprint()) {
          mergeFingerprint(other.getFingerprint());
        }
        if (vectorsBuilder_ == null) {
          if (!other.vectors_.isEmpty()) {
            if (vectors_.isEmpty()) {
              vectors_ = other.vectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorsIsMutable();
              vectors_.addAll(other.vectors_);
            }
            onChanged();
          }
        } else {
          if (!other.vectors_.isEmpty()) {
            if (vectorsBuilder_.isEmpty()) {
              vectorsBuilder_.dispose();
              vectorsBuilder_ = null;
              vectors_ = other.vectors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVectorsFieldBuilder() : null;
            } else {
              vectorsBuilder_.addAllMessages(other.vectors_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OpenFinger.IdentificationRequestOuterClass.IdentificationRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OpenFinger.IdentificationRequestOuterClass.IdentificationRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private OpenFinger.FingerprintOuterClass.Fingerprint fingerprint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenFinger.FingerprintOuterClass.Fingerprint, OpenFinger.FingerprintOuterClass.Fingerprint.Builder, OpenFinger.FingerprintOuterClass.FingerprintOrBuilder> fingerprintBuilder_;
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       * @return Whether the fingerprint field is set.
       */
      public boolean hasFingerprint() {
        return fingerprintBuilder_ != null || fingerprint_ != null;
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       * @return The fingerprint.
       */
      public OpenFinger.FingerprintOuterClass.Fingerprint getFingerprint() {
        if (fingerprintBuilder_ == null) {
          return fingerprint_ == null ? OpenFinger.FingerprintOuterClass.Fingerprint.getDefaultInstance() : fingerprint_;
        } else {
          return fingerprintBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      public Builder setFingerprint(OpenFinger.FingerprintOuterClass.Fingerprint value) {
        if (fingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fingerprint_ = value;
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      public Builder setFingerprint(
          OpenFinger.FingerprintOuterClass.Fingerprint.Builder builderForValue) {
        if (fingerprintBuilder_ == null) {
          fingerprint_ = builderForValue.build();
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      public Builder mergeFingerprint(OpenFinger.FingerprintOuterClass.Fingerprint value) {
        if (fingerprintBuilder_ == null) {
          if (fingerprint_ != null) {
            fingerprint_ =
              OpenFinger.FingerprintOuterClass.Fingerprint.newBuilder(fingerprint_).mergeFrom(value).buildPartial();
          } else {
            fingerprint_ = value;
          }
          onChanged();
        } else {
          fingerprintBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      public Builder clearFingerprint() {
        if (fingerprintBuilder_ == null) {
          fingerprint_ = null;
          onChanged();
        } else {
          fingerprint_ = null;
          fingerprintBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      public OpenFinger.FingerprintOuterClass.Fingerprint.Builder getFingerprintBuilder() {
        
        onChanged();
        return getFingerprintFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      public OpenFinger.FingerprintOuterClass.FingerprintOrBuilder getFingerprintOrBuilder() {
        if (fingerprintBuilder_ != null) {
          return fingerprintBuilder_.getMessageOrBuilder();
        } else {
          return fingerprint_ == null ?
              OpenFinger.FingerprintOuterClass.Fingerprint.getDefaultInstance() : fingerprint_;
        }
      }
      /**
       * <pre>
       * fingerprint image of unknown user
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenFinger.FingerprintOuterClass.Fingerprint, OpenFinger.FingerprintOuterClass.Fingerprint.Builder, OpenFinger.FingerprintOuterClass.FingerprintOrBuilder> 
          getFingerprintFieldBuilder() {
        if (fingerprintBuilder_ == null) {
          fingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              OpenFinger.FingerprintOuterClass.Fingerprint, OpenFinger.FingerprintOuterClass.Fingerprint.Builder, OpenFinger.FingerprintOuterClass.FingerprintOrBuilder>(
                  getFingerprint(),
                  getParentForChildren(),
                  isClean());
          fingerprint_ = null;
        }
        return fingerprintBuilder_;
      }

      private java.util.List<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint> vectors_ =
        java.util.Collections.emptyList();
      private void ensureVectorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vectors_ = new java.util.ArrayList<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint>(vectors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder> vectorsBuilder_;

      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public java.util.List<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint> getVectorsList() {
        if (vectorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vectors_);
        } else {
          return vectorsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public int getVectorsCount() {
        if (vectorsBuilder_ == null) {
          return vectors_.size();
        } else {
          return vectorsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint getVectors(int index) {
        if (vectorsBuilder_ == null) {
          return vectors_.get(index);
        } else {
          return vectorsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder setVectors(
          int index, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint value) {
        if (vectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorsIsMutable();
          vectors_.set(index, value);
          onChanged();
        } else {
          vectorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder setVectors(
          int index, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder builderForValue) {
        if (vectorsBuilder_ == null) {
          ensureVectorsIsMutable();
          vectors_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder addVectors(OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint value) {
        if (vectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorsIsMutable();
          vectors_.add(value);
          onChanged();
        } else {
          vectorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder addVectors(
          int index, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint value) {
        if (vectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorsIsMutable();
          vectors_.add(index, value);
          onChanged();
        } else {
          vectorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder addVectors(
          OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder builderForValue) {
        if (vectorsBuilder_ == null) {
          ensureVectorsIsMutable();
          vectors_.add(builderForValue.build());
          onChanged();
        } else {
          vectorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder addVectors(
          int index, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder builderForValue) {
        if (vectorsBuilder_ == null) {
          ensureVectorsIsMutable();
          vectors_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder addAllVectors(
          java.lang.Iterable<? extends OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint> values) {
        if (vectorsBuilder_ == null) {
          ensureVectorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vectors_);
          onChanged();
        } else {
          vectorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder clearVectors() {
        if (vectorsBuilder_ == null) {
          vectors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public Builder removeVectors(int index) {
        if (vectorsBuilder_ == null) {
          ensureVectorsIsMutable();
          vectors_.remove(index);
          onChanged();
        } else {
          vectorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder getVectorsBuilder(
          int index) {
        return getVectorsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder getVectorsOrBuilder(
          int index) {
        if (vectorsBuilder_ == null) {
          return vectors_.get(index);  } else {
          return vectorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public java.util.List<? extends OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder> 
           getVectorsOrBuilderList() {
        if (vectorsBuilder_ != null) {
          return vectorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vectors_);
        }
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder addVectorsBuilder() {
        return getVectorsFieldBuilder().addBuilder(
            OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.getDefaultInstance());
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder addVectorsBuilder(
          int index) {
        return getVectorsFieldBuilder().addBuilder(
            index, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.getDefaultInstance());
      }
      /**
       * <pre>
       * array of Level-2 vectors from user DB
       * where we search the identity
       * </pre>
       *
       * <code>repeated .OpenFinger.Level2VectorOfFingerprint vectors = 2;</code>
       */
      public java.util.List<OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder> 
           getVectorsBuilderList() {
        return getVectorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder> 
          getVectorsFieldBuilder() {
        if (vectorsBuilder_ == null) {
          vectorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprint.Builder, OpenFinger.IdentificationRequestOuterClass.Level2VectorOfFingerprintOrBuilder>(
                  vectors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vectors_ = null;
        }
        return vectorsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:OpenFinger.IdentificationRequest)
    }

    // @@protoc_insertion_point(class_scope:OpenFinger.IdentificationRequest)
    private static final OpenFinger.IdentificationRequestOuterClass.IdentificationRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OpenFinger.IdentificationRequestOuterClass.IdentificationRequest();
    }

    public static OpenFinger.IdentificationRequestOuterClass.IdentificationRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IdentificationRequest>
        PARSER = new com.google.protobuf.AbstractParser<IdentificationRequest>() {
      @java.lang.Override
      public IdentificationRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IdentificationRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IdentificationRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IdentificationRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public OpenFinger.IdentificationRequestOuterClass.IdentificationRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_OpenFinger_Level2VectorOfFingerprint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OpenFinger_Level2VectorOfFingerprint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_OpenFinger_IdentificationRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OpenFinger_IdentificationRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033IdentificationRequest.proto\022\nOpenFinge" +
      "r\032\021Fingerprint.proto\032\022Level2Vector.proto" +
      "\"c\n\031Level2VectorOfFingerprint\022\026\n\016fingerp" +
      "rint_id\030\001 \001(\005\022.\n\014level2vector\030\002 \001(\0132\030.Op" +
      "enFinger.Level2Vector\"}\n\025IdentificationR" +
      "equest\022,\n\013fingerprint\030\001 \001(\0132\027.OpenFinger" +
      ".Fingerprint\0226\n\007vectors\030\002 \003(\0132%.OpenFing" +
      "er.Level2VectorOfFingerprintb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          OpenFinger.FingerprintOuterClass.getDescriptor(),
          OpenFinger.Level2VectorOuterClass.getDescriptor(),
        });
    internal_static_OpenFinger_Level2VectorOfFingerprint_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_OpenFinger_Level2VectorOfFingerprint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OpenFinger_Level2VectorOfFingerprint_descriptor,
        new java.lang.String[] { "FingerprintId", "Level2Vector", });
    internal_static_OpenFinger_IdentificationRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_OpenFinger_IdentificationRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OpenFinger_IdentificationRequest_descriptor,
        new java.lang.String[] { "Fingerprint", "Vectors", });
    OpenFinger.FingerprintOuterClass.getDescriptor();
    OpenFinger.Level2VectorOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
