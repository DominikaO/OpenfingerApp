// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VerificationRequestOlejarnikova.proto

package OpenFinger;

public final class VerificationRequestOlejarnikovaOuterClass {
  private VerificationRequestOlejarnikovaOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface VerificationRequestOlejarnikovaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OpenFinger.VerificationRequestOlejarnikova)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 requestId = 1;</code>
     * @return The requestId.
     */
    int getRequestId();

    /**
     * <pre>
     * meno pouzivatela v DB voci ktoremu sa verifikuje
     * </pre>
     *
     * <code>string login = 2;</code>
     * @return The login.
     */
    java.lang.String getLogin();
    /**
     * <pre>
     * meno pouzivatela v DB voci ktoremu sa verifikuje
     * </pre>
     *
     * <code>string login = 2;</code>
     * @return The bytes for login.
     */
    com.google.protobuf.ByteString
        getLoginBytes();

    /**
     * <pre>
     * odtlacok ktory sa ide verifikovat
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
     * @return Whether the fingerprint field is set.
     */
    boolean hasFingerprint();
    /**
     * <pre>
     * odtlacok ktory sa ide verifikovat
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
     * @return The fingerprint.
     */
    OpenFinger.FingerprintOuterClass.Fingerprint getFingerprint();
    /**
     * <pre>
     * odtlacok ktory sa ide verifikovat
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
     */
    OpenFinger.FingerprintOuterClass.FingerprintOrBuilder getFingerprintOrBuilder();
  }
  /**
   * Protobuf type {@code OpenFinger.VerificationRequestOlejarnikova}
   */
  public static final class VerificationRequestOlejarnikova extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:OpenFinger.VerificationRequestOlejarnikova)
      VerificationRequestOlejarnikovaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VerificationRequestOlejarnikova.newBuilder() to construct.
    private VerificationRequestOlejarnikova(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VerificationRequestOlejarnikova() {
      login_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new VerificationRequestOlejarnikova();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VerificationRequestOlejarnikova(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              requestId_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              login_ = s;
              break;
            }
            case 26: {
              OpenFinger.FingerprintOuterClass.Fingerprint.Builder subBuilder = null;
              if (fingerprint_ != null) {
                subBuilder = fingerprint_.toBuilder();
              }
              fingerprint_ = input.readMessage(OpenFinger.FingerprintOuterClass.Fingerprint.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fingerprint_);
                fingerprint_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenFinger.VerificationRequestOlejarnikovaOuterClass.internal_static_OpenFinger_VerificationRequestOlejarnikova_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenFinger.VerificationRequestOlejarnikovaOuterClass.internal_static_OpenFinger_VerificationRequestOlejarnikova_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.class, OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.Builder.class);
    }

    public static final int REQUESTID_FIELD_NUMBER = 1;
    private int requestId_;
    /**
     * <code>int32 requestId = 1;</code>
     * @return The requestId.
     */
    @java.lang.Override
    public int getRequestId() {
      return requestId_;
    }

    public static final int LOGIN_FIELD_NUMBER = 2;
    private volatile java.lang.Object login_;
    /**
     * <pre>
     * meno pouzivatela v DB voci ktoremu sa verifikuje
     * </pre>
     *
     * <code>string login = 2;</code>
     * @return The login.
     */
    @java.lang.Override
    public java.lang.String getLogin() {
      java.lang.Object ref = login_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        login_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * meno pouzivatela v DB voci ktoremu sa verifikuje
     * </pre>
     *
     * <code>string login = 2;</code>
     * @return The bytes for login.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLoginBytes() {
      java.lang.Object ref = login_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        login_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FINGERPRINT_FIELD_NUMBER = 3;
    private OpenFinger.FingerprintOuterClass.Fingerprint fingerprint_;
    /**
     * <pre>
     * odtlacok ktory sa ide verifikovat
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
     * @return Whether the fingerprint field is set.
     */
    @java.lang.Override
    public boolean hasFingerprint() {
      return fingerprint_ != null;
    }
    /**
     * <pre>
     * odtlacok ktory sa ide verifikovat
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
     * @return The fingerprint.
     */
    @java.lang.Override
    public OpenFinger.FingerprintOuterClass.Fingerprint getFingerprint() {
      return fingerprint_ == null ? OpenFinger.FingerprintOuterClass.Fingerprint.getDefaultInstance() : fingerprint_;
    }
    /**
     * <pre>
     * odtlacok ktory sa ide verifikovat
     * </pre>
     *
     * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
     */
    @java.lang.Override
    public OpenFinger.FingerprintOuterClass.FingerprintOrBuilder getFingerprintOrBuilder() {
      return getFingerprint();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestId_ != 0) {
        output.writeInt32(1, requestId_);
      }
      if (!getLoginBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, login_);
      }
      if (fingerprint_ != null) {
        output.writeMessage(3, getFingerprint());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, requestId_);
      }
      if (!getLoginBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, login_);
      }
      if (fingerprint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFingerprint());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova)) {
        return super.equals(obj);
      }
      OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova other = (OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova) obj;

      if (getRequestId()
          != other.getRequestId()) return false;
      if (!getLogin()
          .equals(other.getLogin())) return false;
      if (hasFingerprint() != other.hasFingerprint()) return false;
      if (hasFingerprint()) {
        if (!getFingerprint()
            .equals(other.getFingerprint())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQUESTID_FIELD_NUMBER;
      hash = (53 * hash) + getRequestId();
      hash = (37 * hash) + LOGIN_FIELD_NUMBER;
      hash = (53 * hash) + getLogin().hashCode();
      if (hasFingerprint()) {
        hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
        hash = (53 * hash) + getFingerprint().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code OpenFinger.VerificationRequestOlejarnikova}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:OpenFinger.VerificationRequestOlejarnikova)
        OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikovaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenFinger.VerificationRequestOlejarnikovaOuterClass.internal_static_OpenFinger_VerificationRequestOlejarnikova_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenFinger.VerificationRequestOlejarnikovaOuterClass.internal_static_OpenFinger_VerificationRequestOlejarnikova_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.class, OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.Builder.class);
      }

      // Construct using OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        requestId_ = 0;

        login_ = "";

        if (fingerprintBuilder_ == null) {
          fingerprint_ = null;
        } else {
          fingerprint_ = null;
          fingerprintBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenFinger.VerificationRequestOlejarnikovaOuterClass.internal_static_OpenFinger_VerificationRequestOlejarnikova_descriptor;
      }

      @java.lang.Override
      public OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova getDefaultInstanceForType() {
        return OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.getDefaultInstance();
      }

      @java.lang.Override
      public OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova build() {
        OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova buildPartial() {
        OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova result = new OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova(this);
        result.requestId_ = requestId_;
        result.login_ = login_;
        if (fingerprintBuilder_ == null) {
          result.fingerprint_ = fingerprint_;
        } else {
          result.fingerprint_ = fingerprintBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova) {
          return mergeFrom((OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova other) {
        if (other == OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova.getDefaultInstance()) return this;
        if (other.getRequestId() != 0) {
          setRequestId(other.getRequestId());
        }
        if (!other.getLogin().isEmpty()) {
          login_ = other.login_;
          onChanged();
        }
        if (other.hasFingerprint()) {
          mergeFingerprint(other.getFingerprint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int requestId_ ;
      /**
       * <code>int32 requestId = 1;</code>
       * @return The requestId.
       */
      @java.lang.Override
      public int getRequestId() {
        return requestId_;
      }
      /**
       * <code>int32 requestId = 1;</code>
       * @param value The requestId to set.
       * @return This builder for chaining.
       */
      public Builder setRequestId(int value) {
        
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 requestId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestId() {
        
        requestId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object login_ = "";
      /**
       * <pre>
       * meno pouzivatela v DB voci ktoremu sa verifikuje
       * </pre>
       *
       * <code>string login = 2;</code>
       * @return The login.
       */
      public java.lang.String getLogin() {
        java.lang.Object ref = login_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          login_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * meno pouzivatela v DB voci ktoremu sa verifikuje
       * </pre>
       *
       * <code>string login = 2;</code>
       * @return The bytes for login.
       */
      public com.google.protobuf.ByteString
          getLoginBytes() {
        java.lang.Object ref = login_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          login_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * meno pouzivatela v DB voci ktoremu sa verifikuje
       * </pre>
       *
       * <code>string login = 2;</code>
       * @param value The login to set.
       * @return This builder for chaining.
       */
      public Builder setLogin(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        login_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * meno pouzivatela v DB voci ktoremu sa verifikuje
       * </pre>
       *
       * <code>string login = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogin() {
        
        login_ = getDefaultInstance().getLogin();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * meno pouzivatela v DB voci ktoremu sa verifikuje
       * </pre>
       *
       * <code>string login = 2;</code>
       * @param value The bytes for login to set.
       * @return This builder for chaining.
       */
      public Builder setLoginBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        login_ = value;
        onChanged();
        return this;
      }

      private OpenFinger.FingerprintOuterClass.Fingerprint fingerprint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenFinger.FingerprintOuterClass.Fingerprint, OpenFinger.FingerprintOuterClass.Fingerprint.Builder, OpenFinger.FingerprintOuterClass.FingerprintOrBuilder> fingerprintBuilder_;
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       * @return Whether the fingerprint field is set.
       */
      public boolean hasFingerprint() {
        return fingerprintBuilder_ != null || fingerprint_ != null;
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       * @return The fingerprint.
       */
      public OpenFinger.FingerprintOuterClass.Fingerprint getFingerprint() {
        if (fingerprintBuilder_ == null) {
          return fingerprint_ == null ? OpenFinger.FingerprintOuterClass.Fingerprint.getDefaultInstance() : fingerprint_;
        } else {
          return fingerprintBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      public Builder setFingerprint(OpenFinger.FingerprintOuterClass.Fingerprint value) {
        if (fingerprintBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fingerprint_ = value;
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      public Builder setFingerprint(
          OpenFinger.FingerprintOuterClass.Fingerprint.Builder builderForValue) {
        if (fingerprintBuilder_ == null) {
          fingerprint_ = builderForValue.build();
          onChanged();
        } else {
          fingerprintBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      public Builder mergeFingerprint(OpenFinger.FingerprintOuterClass.Fingerprint value) {
        if (fingerprintBuilder_ == null) {
          if (fingerprint_ != null) {
            fingerprint_ =
              OpenFinger.FingerprintOuterClass.Fingerprint.newBuilder(fingerprint_).mergeFrom(value).buildPartial();
          } else {
            fingerprint_ = value;
          }
          onChanged();
        } else {
          fingerprintBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      public Builder clearFingerprint() {
        if (fingerprintBuilder_ == null) {
          fingerprint_ = null;
          onChanged();
        } else {
          fingerprint_ = null;
          fingerprintBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      public OpenFinger.FingerprintOuterClass.Fingerprint.Builder getFingerprintBuilder() {
        
        onChanged();
        return getFingerprintFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      public OpenFinger.FingerprintOuterClass.FingerprintOrBuilder getFingerprintOrBuilder() {
        if (fingerprintBuilder_ != null) {
          return fingerprintBuilder_.getMessageOrBuilder();
        } else {
          return fingerprint_ == null ?
              OpenFinger.FingerprintOuterClass.Fingerprint.getDefaultInstance() : fingerprint_;
        }
      }
      /**
       * <pre>
       * odtlacok ktory sa ide verifikovat
       * </pre>
       *
       * <code>.OpenFinger.Fingerprint fingerprint = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenFinger.FingerprintOuterClass.Fingerprint, OpenFinger.FingerprintOuterClass.Fingerprint.Builder, OpenFinger.FingerprintOuterClass.FingerprintOrBuilder> 
          getFingerprintFieldBuilder() {
        if (fingerprintBuilder_ == null) {
          fingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              OpenFinger.FingerprintOuterClass.Fingerprint, OpenFinger.FingerprintOuterClass.Fingerprint.Builder, OpenFinger.FingerprintOuterClass.FingerprintOrBuilder>(
                  getFingerprint(),
                  getParentForChildren(),
                  isClean());
          fingerprint_ = null;
        }
        return fingerprintBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:OpenFinger.VerificationRequestOlejarnikova)
    }

    // @@protoc_insertion_point(class_scope:OpenFinger.VerificationRequestOlejarnikova)
    private static final OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova();
    }

    public static OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VerificationRequestOlejarnikova>
        PARSER = new com.google.protobuf.AbstractParser<VerificationRequestOlejarnikova>() {
      @java.lang.Override
      public VerificationRequestOlejarnikova parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VerificationRequestOlejarnikova(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VerificationRequestOlejarnikova> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VerificationRequestOlejarnikova> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public OpenFinger.VerificationRequestOlejarnikovaOuterClass.VerificationRequestOlejarnikova getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_OpenFinger_VerificationRequestOlejarnikova_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_OpenFinger_VerificationRequestOlejarnikova_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%VerificationRequestOlejarnikova.proto\022" +
      "\nOpenFinger\032\021Fingerprint.proto\"q\n\037Verifi" +
      "cationRequestOlejarnikova\022\021\n\trequestId\030\001" +
      " \001(\005\022\r\n\005login\030\002 \001(\t\022,\n\013fingerprint\030\003 \001(\013" +
      "2\027.OpenFinger.Fingerprintb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          OpenFinger.FingerprintOuterClass.getDescriptor(),
        });
    internal_static_OpenFinger_VerificationRequestOlejarnikova_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_OpenFinger_VerificationRequestOlejarnikova_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_OpenFinger_VerificationRequestOlejarnikova_descriptor,
        new java.lang.String[] { "RequestId", "Login", "Fingerprint", });
    OpenFinger.FingerprintOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
